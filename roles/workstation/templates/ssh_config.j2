
# SSH config precedence order
# https://www.digitalocean.com/community/tutorials/how-to-configure-custom-connection-options-for-your-ssh-client

# From 7.3p1 and up, there is the Include keyword
# Include config.d/*
Include ~/.ssh/config.d/*

# Inspired by the blog post below to fight the NSA
# https://stribika.github.io/2015/01/04/secure-secure-shell.html

# Github needs diffie-hellman-group-exchange-sha1 some of the time but not always
# Host github.com
#     KexAlgorithms curve25519-sha256@libssh.org,diffie-hellman-group-exchange-sha256,diffie-hellman-group-exchange-sha1,diffie-hellman-group14-sha1

Host *

  # key exchange algorithms
  KexAlgorithms curve25519-sha256@libssh.org,diffie-hellman-group-exchange-sha256

  # host key algorithms the client wants to use in order of preference
  HostKeyAlgorithms ssh-ed25519-cert-v01@openssh.com,ssh-rsa-cert-v01@openssh.com,ssh-ed25519,ssh-rsa

  # symmetric ciphers in order of preference
  Ciphers chacha20-poly1305@openssh.com,aes256-gcm@openssh.com,aes128-gcm@openssh.com,aes256-ctr,aes192-ctr,aes128-ctr

  # Message Authentication Code algorithms in order of preference for data integrity protection
  # hmac-ripemd160 MAC removed as OpenSSH 7.6 deprecated it
  MACs hmac-sha2-512-etm@openssh.com,hmac-sha2-256-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-512,hmac-sha2-256,umac-128@openssh.com

  # client authenticaiton
  PasswordAuthentication no
  ChallengeResponseAuthentication no
  PubkeyAuthentication yes

  # refresh the connection every 30 seconds for a maximum of one hour
  ServerAliveInterval 30
  TCPKeepAlive yes

  # Speed up SSH session creation
  # by sharing multiple sessions over a single network connection
  # reuse already established TCP connection
  ControlMaster auto
  # Use `%C` instead of `%r@%h:%p` to fix unix listener too long for Unix domain socket
  ControlPath ~/.ssh/sockets/%C
  ControlPersist 6h

  # Disable roaming explicitly anyway for good
  # Disabled after upgrading to macOS Sierra
  UseRoaming no

  VerifyHostKeyDNS ask
  VisualHostKey yes

  # Ensure KnownHosts are unreadable if leaked
  # otherwise it is easier to know which hosts your keys have access to
  HashKnownHosts yes

  # macOS Sierra - add passphrases to keychain
  UseKeychain yes

  # Load keys into ssh-agent
  AddKeysToAgent yes
  GSSAPIAuthentication no
  NoHostAuthenticationForLocalhost yes
  ForwardAgent no
  ForwardX11 no
  ForwardX11Trusted yes

# Vagrant
Host 192.168.33.* *.myvagrant.local
  StrictHostKeyChecking no
  UserKnownHostsFile=/dev/null
  User root
  LogLevel ERROR

## Forward all local port 3128 traffic to port 3128 on the remote vps1.cyberciti.biz server ##
## $ ssh -f -N proxyus ##
Host proxyus
  HostName vps1.cyberciti.biz
  User breakfree
  IdentityFile ~/.ssh/vps1.cyberciti.biz.key
  LocalForward 3128 127.0.0.1:3128

# This will allow us to use port 8080 on the local machine
# in order to access example.com at port 80 from the remote machine
Host local_to_remote
    LocalForward 8080 example.com:80

# This will allow us to offer access to internal.com at port 443
# to the remote machine through port 7777 on the other side
Host remote_to_local
    RemoteForward 7777 internal.com:443
